{"version":3,"sources":["components/stepper/step1.js","components/stepper/step2.js","components/common/headers.js","App.js","serviceWorker.js","index.js"],"names":["Step1","React","useState","Date","selectedDate","setSelectedDate","handleDateChange","date","Grid","container","spacing","item","xs","sm","utils","DateFnsUtils","margin","id","fullWidth","label","format","value","onChange","KeyboardButtonProps","TextField","type","style","paddingBottom","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","defaultValue","FormControlLabel","control","Radio","color","Step2","duration","setPer","InputLabel","Select","labelId","event","target","MenuItem","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","onClick","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","button","marginTop","actionsContainer","marginBottom","resetContainer","VerticalLinearStepper","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Container","Stepper","orientation","map","index","Step","key","StepLabel","StepContent","step","getStepContent","Button","disabled","length","Paper","square","elevation","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.143040a0.chunk.js","sourcesContent":["import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\n\r\nexport default function Step1() {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n        <MuiPickersUtilsProvider   utils={DateFnsUtils} >\r\n            <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-of-acident\"\r\n                fullWidth\r\n                label=\"Date of Acident\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n                />\r\n        </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            <MuiPickersUtilsProvider   utils={DateFnsUtils} >\r\n                <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-of-interview\"\r\n                label=\"Date of Interview \"\r\n                fullWidth\r\n                format=\"MM/dd/yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n                />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n            <Grid item  xs={12} sm={6}>\r\n                <TextField id=\"clientname\" fullWidth  label=\"Client Name\" />\r\n            </Grid>\r\n            <Grid item  xs={12} sm={3}>\r\n                <TextField id=\"age\" label=\"Age\" fullWidth type=\"number\" />\r\n            </Grid>\r\n            <Grid item  xs={12} sm={3}>\r\n            <MuiPickersUtilsProvider   utils={DateFnsUtils} >\r\n                <KeyboardDatePicker\r\n                    margin=\"none\"\r\n                    id=\"date-of-birth\"\r\n                    fullWidth\r\n                    label=\"Date of Birth \"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    />\r\n                    </MuiPickersUtilsProvider>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item  xs={12} sm={8}>\r\n            <TextField id=\"address\" fullWidth label=\"Address\" />\r\n        </Grid>\r\n        <Grid item  xs={12}  sm={2}>\r\n            <TextField\r\n            id=\"city\"\r\n            fullWidth\r\n            label=\"City\"\r\n            />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={2}>\r\n            <TextField id=\"zip\" fullWidth label=\"Zip\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n        <Grid item  xs={12} sm={4} style={{paddingBottom: 0}}>\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Sex</FormLabel>\r\n            <RadioGroup row aria-label=\"gender\" name=\"gender\" defaultValue=\"male\">\r\n                <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Male\" />\r\n                <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Female\" />\r\n                <FormControlLabel value=\"other\" control={<Radio color=\"primary\" />} label=\"Other\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item  xs={12}  sm={3} style={{paddingBottom: 0}}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">Marital Status</FormLabel>\r\n            <RadioGroup row aria-label=\"marital-status\" name=\"marital_status\">\r\n                <FormControlLabel value=\"Single\" control={<Radio color=\"primary\" />} label=\"Single\" />\r\n                <FormControlLabel value=\"Maried\" control={<Radio color=\"primary\" />} label=\"Maried\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3} style={{paddingBottom: 0}}>\r\n        <TextField id=\"licenseno\" fullWidth label=\"Driver's License No.\" />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={2}>\r\n        <TextField id=\"cellphone\" fullWidth label=\"Cell Phone\" />    \r\n        </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n        <Grid item  xs={12}  sm={6}>\r\n        <TextField id=\"spousename\" fullWidth label=\"Spouse's Name \" />           \r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n        <TextField id=\"spousephone\" fullWidth label=\"Spouse's Phone\" />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n        <TextField id=\"homephone\" fullWidth label=\"Home Phone\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n        <Grid item  xs={12}  sm={3}>\r\n        <TextField id=\"email\" fullWidth label=\"Email \" />           \r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n        <TextField id=\"emergencycontact\" fullWidth label=\"Emergency Contact\" />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={6}>\r\n        <TextField id=\"fax\" fullWidth label=\"Fax\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n        <Grid item  xs={12}  sm={12}>\r\n        <TextField id=\"extraactivities\" fullWidth label=\"Extracurricular Activities \" />           \r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n</>\r\n    \r\n  );\r\n\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\n\r\nexport default function Step2() {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const [duration, setPer] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n      setPer(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n        <TextField id=\"employer\" fullWidth  label=\"Employer\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n            <MuiPickersUtilsProvider   utils={DateFnsUtils} >\r\n                <KeyboardDatePicker\r\n                 margin=\"none\"\r\n                id=\"how-long\"\r\n                label=\"How long? \"\r\n                fullWidth\r\n                format=\"MM/dd/yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n                />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item  xs={12} sm={2}>\r\n                <TextField id=\"position\" fullWidth  label=\"Position\" />\r\n                </Grid>\r\n                <Grid item  xs={12} sm={2}>\r\n                <TextField id=\"salary\" type=\"number\" fullWidth  label=\"Salary\" />\r\n            </Grid>\r\n            <Grid item  xs={12} sm={2}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Per</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={duration}\r\n                onChange={handleChange}\r\n                >\r\n                <MenuItem value={'Month'}>Month</MenuItem>\r\n                <MenuItem value={'Year'}>Year</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n            <Grid item  xs={12} sm={4}>\r\n                <TextField id=\"supervisor\" fullWidth  label=\"Supervisor\" />\r\n            </Grid>\r\n            <Grid item  xs={12} sm={4}>\r\n                <TextField id=\"offwork\"  fullWidth label=\"Off work? \" />\r\n            </Grid>\r\n            <Grid item  xs={12} sm={4}>\r\n            <MuiPickersUtilsProvider   utils={DateFnsUtils} >\r\n                <KeyboardDatePicker\r\n                    margin=\"none\"\r\n                    id=\"how-long-supervisor\"\r\n                    fullWidth\r\n                    label=\" How long?  \"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    />\r\n                    </MuiPickersUtilsProvider>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item  xs={12} sm={8}>\r\n            <TextField id=\"address-employment\" fullWidth label=\"Address\" />\r\n        </Grid>\r\n        <Grid item  xs={12}  sm={2}>\r\n            <TextField\r\n            id=\"city-employment\"\r\n            fullWidth\r\n            label=\"City\"\r\n            />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={2}>\r\n            <TextField id=\"zip-employment\" fullWidth label=\"Zip\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n        <Grid item  xs={12}  sm={5}>\r\n        <TextField id=\"phoneno-employment\" fullWidth label=\"Phone No.\" />           \r\n        </Grid>\r\n        <Grid item  xs={12} sm={2}>\r\n        <TextField id=\"ext\" fullWidth label=\"Ext.\" />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={5}>\r\n        <TextField id=\"socialsecurityno\" fullWidth label=\"Social Security No.\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n</>\r\n    \r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Step1 from './components/stepper/step1'\nimport Step2 from './components/stepper/step2'\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/common/headers'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Client Interview Sheet - Auto Accident', 'Employment', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <Step1/>;\n    case 1:\n      return <Step2/>;\n    case 2:\n      return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n      <div>\n      <Header/>\n        <Container>\n          <div className={classes.root} style={{marginTop: 10}}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n              {steps.map((label, index) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  <StepContent>\n                    <Typography component=\"div\">{getStepContent(index)}</Typography>\n                    <div className={classes.actionsContainer} style={{marginTop:20}}>\n                      <div>\n                        <Button\n                          disabled={activeStep === 0}\n                          onClick={handleBack}\n                          className={classes.button}\n                        >\n                          Back\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={handleNext}\n                          className={classes.button}\n                        >\n                          {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </Button>\n                      </div>\n                    </div>\n                  </StepContent>\n                </Step>\n              ))}\n            </Stepper>\n            {activeStep === steps.length && (\n              <Paper square elevation={0} className={classes.resetContainer}>\n                <Typography>All steps completed - you&apos;re finished</Typography>\n                <Button onClick={handleReset} className={classes.button}>\n                  Reset\n                </Button>\n              </Paper>\n            )}\n          </div>\n        </Container>\n  </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}